R.version()
R.version
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp('inst/shinyApp')
packageVersion('grDevices')
length(grDevices::colors())
warnings()
help("paste")
library(qHTSWaterfall)
library(qHTSWaterfall)
runQHTSWaterfallApp()
library(qHTSWaterfall)
runApp('inst/shinyApp')
runQHTSWaterfallApp()
library(qHTSWaterfall)
runQHTSWaterfallApp()
library(qHTSWaterfall)
runQHTSWaterfallApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
shiny::runApp('inst/shinyApp')
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
colnames(cdata_curves)
str(cdata_curves)
dim(mainMatrix)
dim(fullMatrix)
colnames(fullMatrix)
dim(myMain)
colnames(myMain)
head(myMain)
tail(myMain)
dim(cdata_curves)
str(cdata_curves)
dim(all_cdata_curves)
head(all_data_curves)
head(all_cdata_curves)
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
colnames(all_data_curves)
runApp('inst/shinyApp')
View(all_cdata_curves)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
unique(waterfallLines$z)
unique(waterfallLines[[1]]$z)
unique(waterfallLines[[2]]$z)
unique(waterfallLines[[4]]$z)
unique(waterfallLines[[3]]$z)
table(waterfallLines[[1]]$z)
i
i <- i -1
currCurveSet[i,"compIndex"]
dim(d1)
d1
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
usethis::use_version()
library(qHTSWaterfall)
shiny::runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
sampleData <<- system.file("extdata", "Generic_qHTS_Format_Example.csv", package="qHTSWaterfall"),
shinyUI(
fluidPage(
useShinyjs(),
inlineCSS("
#sidebarPanel {
}
#mainPanel {
padding-top: 85px;
margin-top: 5px;
padding: 2px 5px 10px 10px;
margin-left: 0px;
margin-right: 0px;
background-color: #e6e6e6;
border: 1.5px solid #b1b3b5;
border-radius: 6px;
min-height=800px;
height: 100%;
}
#mainPlotDiv, #mainPlot {
border: 1.5px solid #b1b3b5;
border-radius: 6px;
background-color: #ffffff;
width: 100%;
height: 100%;
min-height=800px;
}
#plotRefreshBtn, #plotExportBtn {
background-color: #0f7ac7;
color: #ffffff;
margin-bottom: 5px;
margin-right: 10px;
width: 300px;
text-align: center;
font-weight: bold;
}
#plotRefreshBtn:disabled {
opacity: 0.5;
}
#plotRefreshBtn:hover {
background-color: #0967aa;
}
#titlePanel {
background-image: linear-gradient(to right, #0f7ac7, white);
padding: 5px 25px 5px 25px;
color: #FFFFFF;
margin-bottom: 0px;
}
#param-panel {
border: 1.5px solid #b1b3b5;
border-radius: 6px;
background-color: #e6e6e6;
padding: 0px 5px 5px 10px;
margin-top: 5px;
float: right;
}
#secondary-param-panel {
border: 1.5px solid #b1b3b5;
border-radius: 6px;
background-color: #e6e6e6;
padding: 0px 5px 5px 10px;
margin-top: 5px;
float: left;
}
#readoutCollection {
margin-left: 0px;
margin-right: 10px;
}
#sampleDataBtn {
background-color: #8FBC8F;
margin-left: 0px;
margin-right: 10px;
margin-top: 5px;
margin-botom: 5px;
width: 100%;
display: inline-block;
vertical-align: top;
}
#or {
text-align: center;
font-weight: bold;
}
"),
fluidRow(
column(12,
id = 'titlePanel',
titlePanel(title = "qHTS Waterfall Plot", windowTitle = "qHTS Waterfall Plot")
)
),
fluidRow(
column(3,
div(
id = "param-panel",
h3("Data Parameters"),
actionButton(inputId = 'sampleDataBtn', label = 'Plot Our Sample Data'),
tags$a(href=sampleData, "Download Sample Input Data", download=NA, target="_blank"),
h4(id="or","or"),
fileInput(
inputId = 'inputFile',
label = 'Select Your Input File',
multiple = FALSE,
accept = "*.csv",
width = NULL,
buttonLabel = "Browse...",
placeholder = "No file selected"
)
)
),
column(6,
id = "mainPanel",
h3("Plot Preview"),
actionButton(inputId = 'plotRefreshBtn', label = 'Plot / Refresh'),
actionButton(inputId = 'plotExportBtn', label = 'Export Plot'),
div(
id = "mainPlotDiv",
shinycssloaders::withSpinner(plotly::plotlyOutput(outputId = "mainPlot",
width = '100%', height = '800px', inline=F
))
)
),
column(3,
div(
id = "secondary-param-panel",
h3("Plot Parameters", id="plot_params_panel"),
addPlotCustomizationUI()
),
)
)
))
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp()
library(qHTSWaterfall)
runApp()
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
pwd
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='braistedifx', token='6ECC825F01ABC99ADD33384B70C89537', secret='RBN6vPZR0KSQ26270jqFkNRVRbUYsSmCNXOW0XhZ')
shiny::runApp('inst/shinyApp')
deploy()
runApp('inst/shinyApp')
runApp('inst/shinyApp')
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall")
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/inst/shinyApp")
rsconnect::deployApp("C:/Tools/git_projects/qHTSWaterfall_1.0.2.tar.gz")
help(deployApp)
getwd()
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/")
runApp('R')
help("shinyApp")
qHTSWaterfall::runQHTSWaterfallApp()
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/")
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/")
library(qHTSWaterfall)
library(qHTSWaterfall)
pkgload::load_all(".")
print("loaded package")
qHTSWaterfall::runQHTSWaterfallApp()
print("running app")
runQHTSWaterfallApp()
#runQHTSWaterfallApp()
print("running app")
runQHTSWaterfallApp()
help(load_all)
getwd()
pkgload::load_all(".R/.")
pkgload::load_all("R/")
print("loaded package")
runQHTSWaterfallApp()
pkgload::load_all("R/")
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
#pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
appDir <- system.file("shinyApp",package = "qHTSWaterfall")
runWaterfall()
runWaterfall <- function() {
appDir <- system.file("shinyApp",package = "qHTSWaterfall")
shiny::runApp(appDir, display.mode = "normal")
}
runWaterfall()
print("loaded package")
runWaterfall()
print("running app")
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/")
rsconnect::deployApp("C:/Tools/git_projects/qhtsWaterfall/")
library(qHTSWaterfall)
library(qHTSWaterfall)
library(qHTSWaterfall)
library(qHTSWaterfall)
runWaterFall()
library(qHTSWaterfall)
document()
runWaterfall
library(qHTSWaterfall)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(rsconnect)
rsconnect::deployApp()
library(qHTSWaterfall)
library(qHTSWaterfall)
library(qHTSWaterfall)
runWaterfall()
rsconnect::deployApp()
library(qHTSWaterfall)
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(qHTSWaterfall)
rsconnect::deployApp()
help(runApp)
library(qHTSWaterfall)
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
q
library(qHTSWaterfall)
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(qHTSWaterfall)
rsconnect::deployApp()
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
deployApp()
rsconnect::deployApp()
library(qHTSWaterfall)
rsconnect::deployApp()
packageVersion("rsconnect")
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(qHTSWaterfall)
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(qHTSWaterfall)
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
options(shiny.autoload.r = FALSE)
pkgload::load_all(export_all = FALSE, helpers = FALSE, attach_testthat = FALSE)
print("loaded package")
runWaterfall()
print("running app")
library(qHTSWaterfall)
packageVersion("rlang")
packageVersion("utils")
packageVersion("stringr")
packageVersion("dplyr")
packageVersion("tidyr")
packageVersion("shiny")
packageVersion("colourpicker")
packageVersion("shinyjs")
packageVersion("shinydashboard")
packageVersion("plotly")
packageVersion("shinycssloaders")
packageVersion("pkgload")
shiny::runApp('inst/shinyApp')
help(install.packages)
library(qHTSWaterfall)
qHTSWaterfall::runQHTSWaterfallApp()
shiny::runApp('inst/shinyApp')
shiny::runApp('R')
library(rsconnect)
deployApp()
library(qHTSWaterfall)
library(usethis)
usethis::use_package('openxlxs')
usethis::use_package('openxlxs')
usethis::use_package('openxlsx')
usethis::use_package('tools')
library(tools)
library(openxlsx)
as.numeric(5)
5
a <- c(5)
a
as.numeric(a)
library(qHTSWaterfall)
shiny::runApp('inst/shinyApp')
file <- "C:/Tools/git_projects/qhtsWaterfall/inst/extdata/Generic_qHTS_Format_Example.xlsx"
filePath <- file
formatConcHeader <- read.xlsx(filePath, sheet=1, rows = as.numeric(c(1)))
dim(formatConcHeader)
formatConcHeader <- read.xlsx(filePath, sheet=1, rows = c(1))
dim(formatConcHeader)
formatConcHeader <- read.xlsx(filePath, sheet=1, header=F, rows = as.numeric(c(1)))
formatConcHeader <- read.xlsx(filePath, sheet=1, header=F, rows = as.numeric(c(1,2)))
formatConcHeader <- read.xlsx(filePath, sheet=1, rows = as.numeric(c(1,2)))
dim(formatConcHeader)
formatConcHeader <- read.xlsx(filePath, sheet=1, colNames=F, rows = as.numeric(c(1)))
dim(formatConcHeader)
formatConcHeader
formatConcHeader <- read.xlsx(filePath, sheet=1, colNames=F, rows = as.numeric(c(1)))
formatConcHeader <- formatConcHeader[1,]
formatConcHeader
unlist(formatConcHeader)
formatConcHeader <- read.xlsx(filePath, sheet=1, colNames=F, rows = as.numeric(c(1)))
formatConcHeader <- as.character(formatConcHeader[1,])
formatConcHeader
library(qHTSWaterfall)
runApp('inst/shinyApp')
tolower("HI")
toLower("HI")
library(qHTSWaterfall)
runApp('inst/shinyApp')
fileExt <- 'CSV'
tolower(fileExt) == 'csv'
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
a <- c("a", "b", "c")
b <- "c"
b %in% a
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
a
typeof(a)
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp('inst/shinyApp')
library(qHTSWaterfall)
shiny::runApp('inst/shinyApp')
library(qHTSWaterfall)
library(qHTSWaterfall)
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp()
runApp()
runApp()
runApp()
library(qHTSWaterfall)
runApp()
library(qHTSWaterfall)
shiny::runApp('inst/shinyApp')
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp('inst/shinyApp')
source("C:/Tools/git_projects/qhtsWaterfall/R/3d_qHTS_pubchem.R", echo=TRUE)
library(qHTSWaterfall)
runApp('inst/shinyApp')
library(qHTSWaterfall)
runApp('inst/shinyApp')
runApp('inst/shinyApp')
runApp('inst/shinyApp')
